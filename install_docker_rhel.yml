---
- name: Install Docker on AlmaLinux/RHEL
  hosts: alma
  become: true
  gather_facts: true
  vars_files:
    - vault.yml
  vars:
    docker_user: "{{ ansible_user | default(default_user) }}"
    nextcloud_data_path: "{{ install_path }}"
  tasks:
    - name: Update all packages
      dnf:
        name: '*'
        state: latest
        update_cache: yes

    - name: Install required packages
      dnf:
        name:
          - nano
          - wget
          - git
          - unzip
          - qemu-guest-agent
        state: present

    - name: Add Docker repository
      command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker packages
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add current user to docker group
      user:
        name: "{{ docker_user }}"
        groups: docker
        append: yes

    - name: Test Docker installation
      command: docker run hello-world
      register: test_output
      changed_when: false

    - name: Display test output
      debug:
        var: test_output.stdout_lines

    - name: Create SSL certificates directory
      file:
        path: /usr/local/share/ca-certificates
        state: directory
        mode: '0755'

    - name: Copy ONLYOFFICE certificate
      copy:
        src: "{{ playbook_dir }}/onlyoffice.crt"
        dest: /usr/local/share/ca-certificates/onlyoffice.crt
        mode: '0644'

    - name: Update CA certificates
      command: update-ca-certificates

    - name: Set up Nextcloud directory structure with proper permissions
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      with_items:
        - { path: '{{ nextcloud_data_path }}', owner: '{{ docker_user }}', group: '{{ docker_user }}', mode: '0775' }
        - { path: '{{ nextcloud_data_path }}/config', owner: '33', group: '33', mode: '0775' }
        - { path: '{{ nextcloud_data_path }}/custom_apps', owner: '33', group: '33', mode: '0775' }
        - { path: '{{ nextcloud_data_path }}/data', owner: '33', group: '33', mode: '0770' }
        - { path: '{{ nextcloud_data_path }}/db', owner: '999', group: '{{ docker_user }}', mode: '0700' }
        - { path: '{{ nextcloud_data_path }}/logs', owner: '33', group: '33', mode: '0775' }
        - { path: '{{ nextcloud_data_path }}/themes', owner: '33', group: '33', mode: '0775' }

    - name: Create PHP configuration for ONLYOFFICE
      copy:
        dest: "{{ nextcloud_data_path }}/php.ini"
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
        mode: '0664'
        content: |
          memory_limit = 512M
          upload_max_filesize = 1G
          post_max_size = 1G
          max_execution_time = 300
          max_input_time = 300

    - name: Create apache.conf file
      copy:
        dest: "{{ nextcloud_data_path }}/apache.conf"
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
        mode: '0664'
        content: |
          ServerName {{ domain_name }}

          <VirtualHost *:80>
              ServerName {{ domain_name }}
              DocumentRoot /var/www/html

              <Directory /var/www/html>
                  AllowOverride All
                  Require all granted
              </Directory>

              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
        mode: '0664'

    - name: Create docker-compose.yaml for Nextcloud
      copy:
        dest: "{{ nextcloud_data_path }}/compose.yaml"
        owner: "{{ docker_user }}"
        group: "{{ docker_user }}"
        mode: '0664'
        content: |
          services:
            nextcloud:
              image: nextcloud:latest
              container_name: cloud
              restart: always
              ports:
                - "80:80"
                - "443:443"
              depends_on:
                - db
                - redis
              volumes:
                - {{ nextcloud_data_path }}/data:/var/www/html/data
                - {{ nextcloud_data_path }}/config:/var/www/html/config
                - {{ nextcloud_data_path }}/custom_apps:/var/www/html/custom_apps
                - {{ nextcloud_data_path }}/themes:/var/www/html/themes
                - {{ nextcloud_data_path }}/logs:/var/www/html/data/logs
                - {{ nextcloud_data_path }}/apache.conf:/etc/apache2/sites-available/000-default.conf
                - {{ nextcloud_data_path }}/php.ini:/usr/local/etc/php/conf.d/nextcloud.ini
              environment:
                POSTGRES_HOST: db
                POSTGRES_DB: "{{ db_name }}"
                POSTGRES_USER: "{{ db_user }}"
                POSTGRES_PASSWORD: "{{ db_password }}"
                REDIS_HOST: redis
                NEXTCLOUD_ADMIN_USER: "{{ nextcloud_admin_user }}"
                NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_admin_password }}"
                TRUSTED_PROXIES: "{{ trusted_proxy }}"
                OVERWRITEPROTOCOL: https
                APACHE_SERVER_NAME: "{{ domain_name }}"
                NEXTCLOUD_TRUSTED_DOMAINS: |
                  {{ domain_name }}
                  {{ server_ip }}
                  192.168.100.46
                # ONLYOFFICE settings
                ONLYOFFICE_DOCUMENT_SERVER_URL: https://192.168.100.46
                ONLYOFFICE_JWT_SECRET: "{{ jwt_secret }}"
                ONLYOFFICE_JWT_HEADER: "Authorization"
                ONLYOFFICE_VERIFY_PEER_OFF: "true"
              networks:
                - proxy_network
              dns:
                - 8.8.8.8
                - 1.1.1.1
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.cloud.rule=Host(`cloud.fixsys.org`)"
                - "traefik.http.routers.cloud.entrypoints=websecure"
                - "traefik.http.routers.cloud.tls.certresolver=letsencrypt"

            db:
              image: postgres:16
              container_name: cloud-db
              restart: always
              volumes:
                - /home/sasho/cloud/db:/var/lib/postgresql/data
              environment:
                POSTGRES_DB: nextcloud
                POSTGRES_USER: nextcloud
                POSTGRES_PASSWORD: 09876#Pmf
              networks:
                - proxy_network

            redis:
              image: redis:alpine
              container_name: cloud-redis
              restart: always
              networks:
                - proxy_network

            cron:
              image: nextcloud:latest
              container_name: cloud-cron
              restart: always
              volumes:
                - /home/sasho/cloud/data:/var/www/html/data
                - /home/sasho/cloud/config:/var/www/html/config
                - /home/sasho/cloud/custom_apps:/var/www/html/custom_apps
                - /home/sasho/cloud/themes:/var/www/html/themes
                - /home/sasho/cloud/logs:/var/www/html/data/logs
              entrypoint: /cron.sh
              depends_on:
                - db
                - redis
              networks:
                - proxy_network
              dns:
                - 8.8.8.8
                - 1.1.1.1

          networks:
            proxy_network:
              driver: bridge